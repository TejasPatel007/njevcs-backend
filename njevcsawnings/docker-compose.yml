version: '3'

services:
  frontend:
    image: pateltejas931996/njevcs-frontend-pvawnings:latest
    env_file: ".env"
    volumes:
      - frontend_code:/app
      - /app/node_modules
    ports:
      - "80:80"
    command: sh -c "NEXT_PUBLIC_BACKEND_API_URL=${NEXT_PUBLIC_BACKEND_API_URL} npm run build && npm start -- -p 80"
    depends_on:
      - backend
    networks:
      - backend_network
    restart: always

  backend:
    image: pateltejas931996/njevcs-backend-pvawnings:latest
    env_file: ".env"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_CACHE_TYPE=${SPRING_CACHE_TYPE}
      - USE_REDIS_CACHE=${USE_REDIS_CACHE}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    volumes:
      - app_logs:/app/logs
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend_network
    restart: always

  mysql:
    image: mysql:8.0
    env_file: ".env"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_network
    restart: always

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_network
    restart: always

volumes:
  mysql_data:
  redis_data:
  app_logs:
  frontend_code:

networks:
  backend_network:
    driver: bridge
